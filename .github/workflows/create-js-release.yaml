name: nodejs-polars

on:
  pull_request
  # push:
  #    # Sequence of patterns matched against refs/tags
  #   tags:
  #     - 'nodejs-polars-v*' # Push events to matching nodejs-polars-v*, i.e. nodejs-polars-v1.0, nodejs-polars-v20.15.10
jobs:
  build-js:
    defaults:
      run:
        working-directory: nodejs-polars
    strategy:
      fail-fast: false
      matrix:
        settings:

            # Linux
            ########

          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            architecture: x64
            docker: |
              docker pull ghcr.io/napi-rs/napi-rs/nodejs-rust@sha256:e510d7fdb259bd9b7ce05aa961223dd6379c1a944f85c271b76561b7ab7565b2
              docker tag ghcr.io/napi-rs/napi-rs/nodejs-rust@sha256:e510d7fdb259bd9b7ce05aa961223dd6379c1a944f85c271b76561b7ab7565b2 builder
            build: |
              docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v "$GITHUB_WORKSPACE:/build" -w /build/nodejs-polars builder yarn build:debug && strip polars/*.node

    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          architecture: ${{ matrix.settings.architecture }}
          cache: yarn
          cache-dependency-path: nodejs-polars/yarn.lock
      - name: Copy rust-toolchain to root
        run: cp rust-toolchain ..
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.settings.target }}

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.settings.target }}-node@16-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.settings.target }}-node@16-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Pull latest image
        run: ${{ matrix.settings.docker }}
        env:
          DOCKER_REGISTRY_URL: ghcr.io
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.settings.docker }}

      - name: "Setup toolchain"
        if: ${{ matrix.settings.setup }}
        run: ${{ matrix.settings.setup }}

      - name: "Install dependencies"
        run: yarn install
        if: ${{ matrix.settings.target != 'i686-pc-windows-msvc' }}

      - name: "Install dependencies"
        run: npm install
        if: ${{ matrix.settings.target == 'i686-pc-windows-msvc' }}

      - name: "Build"
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: nodejs-polars/polars/*.node
          name: bindings-${{ matrix.settings.target }}
          if-no-files-found: error

  test-macos:
    defaults:
      run:
        working-directory: nodejs-polars
    needs:
      - build-js
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          name: bindings-x86_64-apple-darwin
          path: nodejs-polars
      - name: Run test
        run: yarn test

  # publish:
  #   name: Publish
  #   needs:
  #     - test-macos
  #   defaults:
  #     run:
  #       working-directory: nodejs-polars
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "16"
  #         registry-url: "https://registry.npmjs.org"
  #         cache: yarn
  #         cache-dependency-path: nodejs-polars/yarn.lock

  #     - name: "Install dependencies"
  #       run: yarn install

  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: nodejs-polars/artifacts

  #     - name: Move artifacts
  #       run: yarn artifacts

  #     - name: Build TypeScript
  #       run: yarn build:ts

  #     - name: List artifacts
  #       run: ls -R npm
  #       shell: bash

  #     - name: Publish to npm
  #       run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
